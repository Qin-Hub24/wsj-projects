package com.app.raghu.controller;

import java.security.Principal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.*;

import com.app.raghu.entity.User;
import com.app.raghu.entity.UserRequest;
import com.app.raghu.entity.UserResponse;
import com.app.raghu.service.IUserService;
import com.app.raghu.util.JwtUtil;

/***
 * 模块名称： 用户登录
 *  作者： 卢泽涛、 田小明
 *  修改日期：20241112
 *  说明： 需要在header的 Authorize 存入token
 */
@RestController
@RequestMapping("/user")
public class UserRestController {

	@Autowired
	private AuthenticationManager authenticationManager;

	@Autowired
	private IUserService service;

	@Autowired
	private JwtUtil jwtUtil;

	@PostMapping("/save")
	public ResponseEntity<String> saveUser(@RequestBody User user) {
		Integer id=service.saveUser(user);
		return ResponseEntity.ok("User saved with id"+id);
	}

	@PostMapping("/login")
	public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest userRequest)
	{
		try{
			String userName = userRequest.getUsername();
			String userPassword = userRequest.getPassword();
			UsernamePasswordAuthenticationToken tmp =new UsernamePasswordAuthenticationToken(userName, userPassword	);
			authenticationManager.authenticate( tmp );
			String token=jwtUtil.generateToken(userName);
			return ResponseEntity.ok(new UserResponse(token,"GENERATED BY SYSTEM"));
		} catch (Exception e) {
			return ResponseEntity.ok(new UserResponse(null,e.toString()));
		}
	}

	@GetMapping("/getUser")
	public ResponseEntity<User> getUser(@RequestHeader("Authorization") String token) {
		try {
			String username = jwtUtil.getUsername(token);
			User user = service.findByUsername(username);
			if (user != null) {
				return ResponseEntity.ok(user); // 返回用户信息
			} else {
				return ResponseEntity.status(404).body(null); // 用户不存在
			}
		} catch (Exception e) {
			return ResponseEntity.status(401).body(null); // token 无效或其他错误
		}
	}
	
	@PostMapping("/welcome")
	public ResponseEntity<String> accessUserData(Principal p) {
		return ResponseEntity.ok("Hello user:"+p.getName());
	}


}
